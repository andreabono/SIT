/*
 * Apollo Web Services
 *  # Rate limit:   The **Rate Limit** and **Rate Reset** are specified in the HTTP-header with `X-RateLimit-Limit` and `X-RateLimit-Reset`; the rate limit is *per* `IP`.
 *
 * The version of the OpenAPI document: 2.32.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.apollo.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.ingv.apollo.model.ObjectPyMLConfEventMagnitude;
import org.ingv.apollo.model.ObjectPyMLConfPreconditions;
import org.ingv.apollo.model.ObjectPyMLConfStationMagnitude;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.ingv.apollo.JSON;

/**
 * ObjectPyMLConf
 */
////////////@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-03T13:14:51.077355279Z[Etc/UTC]")
public class ObjectPyMLConf {
  public static final String SERIALIZED_NAME_PRECONDITIONS = "preconditions";
  @SerializedName(SERIALIZED_NAME_PRECONDITIONS)
  private ObjectPyMLConfPreconditions preconditions;

  public static final String SERIALIZED_NAME_STATION_MAGNITUDE = "station_magnitude";
  @SerializedName(SERIALIZED_NAME_STATION_MAGNITUDE)
  private ObjectPyMLConfStationMagnitude stationMagnitude;

  public static final String SERIALIZED_NAME_EVENT_MAGNITUDE = "event_magnitude";
  @SerializedName(SERIALIZED_NAME_EVENT_MAGNITUDE)
  private ObjectPyMLConfEventMagnitude eventMagnitude;

  public ObjectPyMLConf() {
  }

  public ObjectPyMLConf preconditions(ObjectPyMLConfPreconditions preconditions) {
    this.preconditions = preconditions;
    return this;
  }

   /**
   * Get preconditions
   * @return preconditions
  **/
  @javax.annotation.Nullable
  public ObjectPyMLConfPreconditions getPreconditions() {
    return preconditions;
  }

  public void setPreconditions(ObjectPyMLConfPreconditions preconditions) {
    this.preconditions = preconditions;
  }


  public ObjectPyMLConf stationMagnitude(ObjectPyMLConfStationMagnitude stationMagnitude) {
    this.stationMagnitude = stationMagnitude;
    return this;
  }

   /**
   * Get stationMagnitude
   * @return stationMagnitude
  **/
  @javax.annotation.Nullable
  public ObjectPyMLConfStationMagnitude getStationMagnitude() {
    return stationMagnitude;
  }

  public void setStationMagnitude(ObjectPyMLConfStationMagnitude stationMagnitude) {
    this.stationMagnitude = stationMagnitude;
  }


  public ObjectPyMLConf eventMagnitude(ObjectPyMLConfEventMagnitude eventMagnitude) {
    this.eventMagnitude = eventMagnitude;
    return this;
  }

   /**
   * Get eventMagnitude
   * @return eventMagnitude
  **/
  @javax.annotation.Nullable
  public ObjectPyMLConfEventMagnitude getEventMagnitude() {
    return eventMagnitude;
  }

  public void setEventMagnitude(ObjectPyMLConfEventMagnitude eventMagnitude) {
    this.eventMagnitude = eventMagnitude;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPyMLConf objectPyMLConf = (ObjectPyMLConf) o;
    return Objects.equals(this.preconditions, objectPyMLConf.preconditions) &&
        Objects.equals(this.stationMagnitude, objectPyMLConf.stationMagnitude) &&
        Objects.equals(this.eventMagnitude, objectPyMLConf.eventMagnitude);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preconditions, stationMagnitude, eventMagnitude);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPyMLConf {\n");
    sb.append("    preconditions: ").append(toIndentedString(preconditions)).append("\n");
    sb.append("    stationMagnitude: ").append(toIndentedString(stationMagnitude)).append("\n");
    sb.append("    eventMagnitude: ").append(toIndentedString(eventMagnitude)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("preconditions");
    openapiFields.add("station_magnitude");
    openapiFields.add("event_magnitude");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ObjectPyMLConf
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ObjectPyMLConf.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectPyMLConf is not found in the empty JSON string", ObjectPyMLConf.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ObjectPyMLConf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjectPyMLConf` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `preconditions`
      if (jsonObj.get("preconditions") != null && !jsonObj.get("preconditions").isJsonNull()) {
        ObjectPyMLConfPreconditions.validateJsonElement(jsonObj.get("preconditions"));
      }
      // validate the optional field `station_magnitude`
      if (jsonObj.get("station_magnitude") != null && !jsonObj.get("station_magnitude").isJsonNull()) {
        ObjectPyMLConfStationMagnitude.validateJsonElement(jsonObj.get("station_magnitude"));
      }
      // validate the optional field `event_magnitude`
      if (jsonObj.get("event_magnitude") != null && !jsonObj.get("event_magnitude").isJsonNull()) {
        ObjectPyMLConfEventMagnitude.validateJsonElement(jsonObj.get("event_magnitude"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectPyMLConf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectPyMLConf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectPyMLConf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectPyMLConf.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectPyMLConf>() {
           @Override
           public void write(JsonWriter out, ObjectPyMLConf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectPyMLConf read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectPyMLConf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectPyMLConf
  * @throws IOException if the JSON string is invalid with respect to ObjectPyMLConf
  */
  public static ObjectPyMLConf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectPyMLConf.class);
  }

 /**
  * Convert an instance of ObjectPyMLConf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

