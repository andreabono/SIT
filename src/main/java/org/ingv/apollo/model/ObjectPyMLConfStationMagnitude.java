/*
 * Apollo Web Services
 *  # Rate limit:   The **Rate Limit** and **Rate Reset** are specified in the HTTP-header with `X-RateLimit-Limit` and `X-RateLimit-Reset`; the rate limit is *per* `IP`.
 *
 * The version of the OpenAPI document: 2.32.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.apollo.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.ingv.apollo.JSON;

/**
 * ObjectPyMLConfStationMagnitude
 */
////////////@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-03T13:14:51.077355279Z[Etc/UTC]")
public class ObjectPyMLConfStationMagnitude {
  /**
   * Gets or Sets magMeanType
   */
  @JsonAdapter(MagMeanTypeEnum.Adapter.class)
  public enum MagMeanTypeEnum {
    MEANAMP("meanamp"),
    
    MEANMAG("meanmag");

    private String value;

    MagMeanTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MagMeanTypeEnum fromValue(String value) {
      for (MagMeanTypeEnum b : MagMeanTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MagMeanTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MagMeanTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MagMeanTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MagMeanTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MagMeanTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MAG_MEAN_TYPE = "mag_mean_type";
  @SerializedName(SERIALIZED_NAME_MAG_MEAN_TYPE)
  private MagMeanTypeEnum magMeanType = MagMeanTypeEnum.MEANAMP;

  /**
   * Gets or Sets ampMeanType
   */
  @JsonAdapter(AmpMeanTypeEnum.Adapter.class)
  public enum AmpMeanTypeEnum {
    GEO("geo"),
    
    ARI("ari");

    private String value;

    AmpMeanTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AmpMeanTypeEnum fromValue(String value) {
      for (AmpMeanTypeEnum b : AmpMeanTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AmpMeanTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AmpMeanTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AmpMeanTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AmpMeanTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AmpMeanTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AMP_MEAN_TYPE = "amp_mean_type";
  @SerializedName(SERIALIZED_NAME_AMP_MEAN_TYPE)
  private AmpMeanTypeEnum ampMeanType = AmpMeanTypeEnum.GEO;

  public static final String SERIALIZED_NAME_DELTA_PEAKS = "delta_peaks";
  @SerializedName(SERIALIZED_NAME_DELTA_PEAKS)
  private Float deltaPeaks;

  public static final String SERIALIZED_NAME_USE_STCORR_HB = "use_stcorr_hb";
  @SerializedName(SERIALIZED_NAME_USE_STCORR_HB)
  private Boolean useStcorrHb = true;

  public static final String SERIALIZED_NAME_USE_STCORR_DB = "use_stcorr_db";
  @SerializedName(SERIALIZED_NAME_USE_STCORR_DB)
  private Boolean useStcorrDb = true;

  public static final String SERIALIZED_NAME_WHEN_NO_STCORR_HB = "when_no_stcorr_hb";
  @SerializedName(SERIALIZED_NAME_WHEN_NO_STCORR_HB)
  private Boolean whenNoStcorrHb = true;

  public static final String SERIALIZED_NAME_WHEN_NO_STCORR_DB = "when_no_stcorr_db";
  @SerializedName(SERIALIZED_NAME_WHEN_NO_STCORR_DB)
  private Boolean whenNoStcorrDb = true;

  public ObjectPyMLConfStationMagnitude() {
  }

  public ObjectPyMLConfStationMagnitude magMeanType(MagMeanTypeEnum magMeanType) {
    this.magMeanType = magMeanType;
    return this;
  }

   /**
   * Get magMeanType
   * @return magMeanType
  **/
  @javax.annotation.Nullable
  public MagMeanTypeEnum getMagMeanType() {
    return magMeanType;
  }

  public void setMagMeanType(MagMeanTypeEnum magMeanType) {
    this.magMeanType = magMeanType;
  }


  public ObjectPyMLConfStationMagnitude ampMeanType(AmpMeanTypeEnum ampMeanType) {
    this.ampMeanType = ampMeanType;
    return this;
  }

   /**
   * Get ampMeanType
   * @return ampMeanType
  **/
  @javax.annotation.Nullable
  public AmpMeanTypeEnum getAmpMeanType() {
    return ampMeanType;
  }

  public void setAmpMeanType(AmpMeanTypeEnum ampMeanType) {
    this.ampMeanType = ampMeanType;
  }


  public ObjectPyMLConfStationMagnitude deltaPeaks(Float deltaPeaks) {
    this.deltaPeaks = deltaPeaks;
    return this;
  }

   /**
   * Get deltaPeaks
   * @return deltaPeaks
  **/
  @javax.annotation.Nullable
  public Float getDeltaPeaks() {
    return deltaPeaks;
  }

  public void setDeltaPeaks(Float deltaPeaks) {
    this.deltaPeaks = deltaPeaks;
  }


  public ObjectPyMLConfStationMagnitude useStcorrHb(Boolean useStcorrHb) {
    this.useStcorrHb = useStcorrHb;
    return this;
  }

   /**
   * Get useStcorrHb
   * @return useStcorrHb
  **/
  @javax.annotation.Nullable
  public Boolean getUseStcorrHb() {
    return useStcorrHb;
  }

  public void setUseStcorrHb(Boolean useStcorrHb) {
    this.useStcorrHb = useStcorrHb;
  }


  public ObjectPyMLConfStationMagnitude useStcorrDb(Boolean useStcorrDb) {
    this.useStcorrDb = useStcorrDb;
    return this;
  }

   /**
   * Get useStcorrDb
   * @return useStcorrDb
  **/
  @javax.annotation.Nullable
  public Boolean getUseStcorrDb() {
    return useStcorrDb;
  }

  public void setUseStcorrDb(Boolean useStcorrDb) {
    this.useStcorrDb = useStcorrDb;
  }


  public ObjectPyMLConfStationMagnitude whenNoStcorrHb(Boolean whenNoStcorrHb) {
    this.whenNoStcorrHb = whenNoStcorrHb;
    return this;
  }

   /**
   * Get whenNoStcorrHb
   * @return whenNoStcorrHb
  **/
  @javax.annotation.Nullable
  public Boolean getWhenNoStcorrHb() {
    return whenNoStcorrHb;
  }

  public void setWhenNoStcorrHb(Boolean whenNoStcorrHb) {
    this.whenNoStcorrHb = whenNoStcorrHb;
  }


  public ObjectPyMLConfStationMagnitude whenNoStcorrDb(Boolean whenNoStcorrDb) {
    this.whenNoStcorrDb = whenNoStcorrDb;
    return this;
  }

   /**
   * Get whenNoStcorrDb
   * @return whenNoStcorrDb
  **/
  @javax.annotation.Nullable
  public Boolean getWhenNoStcorrDb() {
    return whenNoStcorrDb;
  }

  public void setWhenNoStcorrDb(Boolean whenNoStcorrDb) {
    this.whenNoStcorrDb = whenNoStcorrDb;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPyMLConfStationMagnitude objectPyMLConfStationMagnitude = (ObjectPyMLConfStationMagnitude) o;
    return Objects.equals(this.magMeanType, objectPyMLConfStationMagnitude.magMeanType) &&
        Objects.equals(this.ampMeanType, objectPyMLConfStationMagnitude.ampMeanType) &&
        Objects.equals(this.deltaPeaks, objectPyMLConfStationMagnitude.deltaPeaks) &&
        Objects.equals(this.useStcorrHb, objectPyMLConfStationMagnitude.useStcorrHb) &&
        Objects.equals(this.useStcorrDb, objectPyMLConfStationMagnitude.useStcorrDb) &&
        Objects.equals(this.whenNoStcorrHb, objectPyMLConfStationMagnitude.whenNoStcorrHb) &&
        Objects.equals(this.whenNoStcorrDb, objectPyMLConfStationMagnitude.whenNoStcorrDb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(magMeanType, ampMeanType, deltaPeaks, useStcorrHb, useStcorrDb, whenNoStcorrHb, whenNoStcorrDb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPyMLConfStationMagnitude {\n");
    sb.append("    magMeanType: ").append(toIndentedString(magMeanType)).append("\n");
    sb.append("    ampMeanType: ").append(toIndentedString(ampMeanType)).append("\n");
    sb.append("    deltaPeaks: ").append(toIndentedString(deltaPeaks)).append("\n");
    sb.append("    useStcorrHb: ").append(toIndentedString(useStcorrHb)).append("\n");
    sb.append("    useStcorrDb: ").append(toIndentedString(useStcorrDb)).append("\n");
    sb.append("    whenNoStcorrHb: ").append(toIndentedString(whenNoStcorrHb)).append("\n");
    sb.append("    whenNoStcorrDb: ").append(toIndentedString(whenNoStcorrDb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mag_mean_type");
    openapiFields.add("amp_mean_type");
    openapiFields.add("delta_peaks");
    openapiFields.add("use_stcorr_hb");
    openapiFields.add("use_stcorr_db");
    openapiFields.add("when_no_stcorr_hb");
    openapiFields.add("when_no_stcorr_db");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ObjectPyMLConfStationMagnitude
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ObjectPyMLConfStationMagnitude.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectPyMLConfStationMagnitude is not found in the empty JSON string", ObjectPyMLConfStationMagnitude.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ObjectPyMLConfStationMagnitude.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjectPyMLConfStationMagnitude` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("mag_mean_type") != null && !jsonObj.get("mag_mean_type").isJsonNull()) && !jsonObj.get("mag_mean_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mag_mean_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mag_mean_type").toString()));
      }
      // validate the optional field `mag_mean_type`
      if (jsonObj.get("mag_mean_type") != null && !jsonObj.get("mag_mean_type").isJsonNull()) {
        MagMeanTypeEnum.validateJsonElement(jsonObj.get("mag_mean_type"));
      }
      if ((jsonObj.get("amp_mean_type") != null && !jsonObj.get("amp_mean_type").isJsonNull()) && !jsonObj.get("amp_mean_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amp_mean_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amp_mean_type").toString()));
      }
      // validate the optional field `amp_mean_type`
      if (jsonObj.get("amp_mean_type") != null && !jsonObj.get("amp_mean_type").isJsonNull()) {
        AmpMeanTypeEnum.validateJsonElement(jsonObj.get("amp_mean_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectPyMLConfStationMagnitude.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectPyMLConfStationMagnitude' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectPyMLConfStationMagnitude> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectPyMLConfStationMagnitude.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectPyMLConfStationMagnitude>() {
           @Override
           public void write(JsonWriter out, ObjectPyMLConfStationMagnitude value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectPyMLConfStationMagnitude read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectPyMLConfStationMagnitude given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectPyMLConfStationMagnitude
  * @throws IOException if the JSON string is invalid with respect to ObjectPyMLConfStationMagnitude
  */
  public static ObjectPyMLConfStationMagnitude fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectPyMLConfStationMagnitude.class);
  }

 /**
  * Convert an instance of ObjectPyMLConfStationMagnitude to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

