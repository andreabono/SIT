/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 3.22.2
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.api;

import org.ingv.dante.ApiCallback;
import org.ingv.dante.ApiClient;
import org.ingv.dante.ApiException;
import org.ingv.dante.ApiResponse;
import org.ingv.dante.Configuration;
import org.ingv.dante.Pair;
import org.ingv.dante.ProgressRequestBody;
import org.ingv.dante.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.ingv.dante.model.GetEvent200Response;
import org.ingv.dante.model.GetEventsCatalog200Response;
import org.ingv.dante.model.GetEventsGroup200Response;
import org.ingv.dante.model.GetLocalspace200Response;
import org.ingv.dante.model.GetMunicipiDistanceKmPopolazione200Response;
import org.ingv.dante.model.GetMunicipio200Response;
import org.ingv.dante.model.GetOriginFlag200Response;
import org.ingv.dante.model.GetProvenance200Response;
import org.ingv.dante.model.GetRegionName200Response;
import org.ingv.dante.model.GetTypeEvent200Response;
import org.ingv.dante.model.GetTypeMagnitude200Response;
import org.ingv.dante.model.GetTypeOrigin200Response;
import java.time.OffsetDateTime;
import org.ingv.dante.model.Problem;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GetApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GetApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GetApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getAll
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/all";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        return getAllCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);

    }

    /**
     * This API returns all origins with all magnitude; one per line.
     * This API returns all the origins with all magnitudes; one per line
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return GetEventsGroup200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsGroup200Response getAll(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        ApiResponse<GetEventsGroup200Response> localVarResp = getAllWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid);
        return localVarResp.getData();
    }

    /**
     * This API returns all origins with all magnitude; one per line.
     * This API returns all the origins with all magnitudes; one per line
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return ApiResponse&lt;GetEventsGroup200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsGroup200Response> getAllWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        okhttp3.Call localVarCall = getAllValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, null);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all origins with all magnitude; one per line. (asynchronously)
     * This API returns all the origins with all magnitudes; one per line
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback<GetEventsGroup200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getEvent
     * @param originid Select by origin id. (optional)
     * @param eventid Select by event id. (optional)
     * @param level Select deep level (optional, default to all)
     * @param originOrderby Select origins \&quot;order by\&quot; (optional, default to type_origin_priority-asc)
     * @param magnitudeOrderby Select magnitudes \&quot;order by\&quot; (optional, default to type_magnitude_priority-asc)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventCall(Long originid, Long eventid, String level, String originOrderby, String magnitudeOrderby, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/event";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (level != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("level", level));
        }

        if (originOrderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origin-orderby", originOrderby));
        }

        if (magnitudeOrderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitude-orderby", magnitudeOrderby));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventValidateBeforeCall(Long originid, Long eventid, String level, String originOrderby, String magnitudeOrderby, final ApiCallback _callback) throws ApiException {
        return getEventCall(originid, eventid, level, originOrderby, magnitudeOrderby, _callback);

    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param originid Select by origin id. (optional)
     * @param eventid Select by event id. (optional)
     * @param level Select deep level (optional, default to all)
     * @param originOrderby Select origins \&quot;order by\&quot; (optional, default to type_origin_priority-asc)
     * @param magnitudeOrderby Select magnitudes \&quot;order by\&quot; (optional, default to type_magnitude_priority-asc)
     * @return GetEvent200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEvent200Response getEvent(Long originid, Long eventid, String level, String originOrderby, String magnitudeOrderby) throws ApiException {
        ApiResponse<GetEvent200Response> localVarResp = getEventWithHttpInfo(originid, eventid, level, originOrderby, magnitudeOrderby);
        return localVarResp.getData();
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param originid Select by origin id. (optional)
     * @param eventid Select by event id. (optional)
     * @param level Select deep level (optional, default to all)
     * @param originOrderby Select origins \&quot;order by\&quot; (optional, default to type_origin_priority-asc)
     * @param magnitudeOrderby Select magnitudes \&quot;order by\&quot; (optional, default to type_magnitude_priority-asc)
     * @return ApiResponse&lt;GetEvent200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEvent200Response> getEventWithHttpInfo(Long originid, Long eventid, String level, String originOrderby, String magnitudeOrderby) throws ApiException {
        okhttp3.Call localVarCall = getEventValidateBeforeCall(originid, eventid, level, originOrderby, magnitudeOrderby, null);
        Type localVarReturnType = new TypeToken<GetEvent200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events. (asynchronously)
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param originid Select by origin id. (optional)
     * @param eventid Select by event id. (optional)
     * @param level Select deep level (optional, default to all)
     * @param originOrderby Select origins \&quot;order by\&quot; (optional, default to type_origin_priority-asc)
     * @param magnitudeOrderby Select magnitudes \&quot;order by\&quot; (optional, default to type_magnitude_priority-asc)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventAsync(Long originid, Long eventid, String level, String originOrderby, String magnitudeOrderby, final ApiCallback<GetEvent200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventValidateBeforeCall(originid, eventid, level, originOrderby, magnitudeOrderby, _callback);
        Type localVarReturnType = new TypeToken<GetEvent200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getEvents
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventsValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        return getEventsCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);

    }

    /**
     * This API returns the preferred origin and the preferred magnitude from the same instance.
     * This API returns the preferred origin and the preferred magnitude from the same instance
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return GetEventsGroup200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsGroup200Response getEvents(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        ApiResponse<GetEventsGroup200Response> localVarResp = getEventsWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid);
        return localVarResp.getData();
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from the same instance.
     * This API returns the preferred origin and the preferred magnitude from the same instance
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return ApiResponse&lt;GetEventsGroup200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsGroup200Response> getEventsWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        okhttp3.Call localVarCall = getEventsValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, null);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from the same instance. (asynchronously)
     * This API returns the preferred origin and the preferred magnitude from the same instance
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback<GetEventsGroup200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventsValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getEventsCatalog
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param doi Doi. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsCatalogCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, String doi, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/events-catalog";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        if (doi != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("doi", doi));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventsCatalogValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, String doi, final ApiCallback _callback) throws ApiException {
        return getEventsCatalogCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, doi, _callback);

    }

    /**
     * This API returns the catalogs.
     * This API returns only the \&quot;catalogs\&quot;.   All &#x60;catalogs&#x60; are identified by &#x60;event.localspace.environment&#x3D;catalog&#x60; and the name of catalog is &#x60;event.localspace.name&#x60;.    To search a specific catalog, use &#x60;whereeventlocalspacenamein&#x60; parameter and/or &#x60;doi&#x60; paramenter.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param doi Doi. (optional)
     * @return GetEventsCatalog200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsCatalog200Response getEventsCatalog(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, String doi) throws ApiException {
        ApiResponse<GetEventsCatalog200Response> localVarResp = getEventsCatalogWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, doi);
        return localVarResp.getData();
    }

    /**
     * This API returns the catalogs.
     * This API returns only the \&quot;catalogs\&quot;.   All &#x60;catalogs&#x60; are identified by &#x60;event.localspace.environment&#x3D;catalog&#x60; and the name of catalog is &#x60;event.localspace.name&#x60;.    To search a specific catalog, use &#x60;whereeventlocalspacenamein&#x60; parameter and/or &#x60;doi&#x60; paramenter.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param doi Doi. (optional)
     * @return ApiResponse&lt;GetEventsCatalog200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsCatalog200Response> getEventsCatalogWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, String doi) throws ApiException {
        okhttp3.Call localVarCall = getEventsCatalogValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, doi, null);
        Type localVarReturnType = new TypeToken<GetEventsCatalog200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the catalogs. (asynchronously)
     * This API returns only the \&quot;catalogs\&quot;.   All &#x60;catalogs&#x60; are identified by &#x60;event.localspace.environment&#x3D;catalog&#x60; and the name of catalog is &#x60;event.localspace.name&#x60;.    To search a specific catalog, use &#x60;whereeventlocalspacenamein&#x60; parameter and/or &#x60;doi&#x60; paramenter.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param doi Doi. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsCatalogAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, String doi, final ApiCallback<GetEventsCatalog200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventsCatalogValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, doi, _callback);
        Type localVarReturnType = new TypeToken<GetEventsCatalog200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getEventsGroup
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsGroupCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/events-group";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEventsGroupValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        return getEventsGroupCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);

    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return GetEventsGroup200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsGroup200Response getEventsGroup(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        ApiResponse<GetEventsGroup200Response> localVarResp = getEventsGroupWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid);
        return localVarResp.getData();
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return ApiResponse&lt;GetEventsGroup200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsGroup200Response> getEventsGroupWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        okhttp3.Call localVarCall = getEventsGroupValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, null);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the preferred origin and the preferred magnitude from all clusterd events. (asynchronously)
     * This API returns the preferred origin and the preferred magnitude from all clusterd events.
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getEventsGroupAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback<GetEventsGroup200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getEventsGroupValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getLocalspace
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getLocalspaceCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/table/v1/localspace";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getLocalspaceValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getLocalspaceCall(_callback);

    }

    /**
     * This API returns all the localspace(s).
     * This API returns all the localspace(s).
     * @return GetLocalspace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetLocalspace200Response getLocalspace() throws ApiException {
        ApiResponse<GetLocalspace200Response> localVarResp = getLocalspaceWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * This API returns all the localspace(s).
     * This API returns all the localspace(s).
     * @return ApiResponse&lt;GetLocalspace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetLocalspace200Response> getLocalspaceWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getLocalspaceValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetLocalspace200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the localspace(s). (asynchronously)
     * This API returns all the localspace(s).
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getLocalspaceAsync(final ApiCallback<GetLocalspace200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getLocalspaceValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetLocalspace200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getMagnitudes
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMagnitudesCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/magnitudes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getMagnitudesValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        return getMagnitudesCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);

    }

    /**
     * This API returns all origins with own preferred magnitude.
     * This API returns all the origins with own preferred magnitude
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return GetEventsGroup200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsGroup200Response getMagnitudes(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        ApiResponse<GetEventsGroup200Response> localVarResp = getMagnitudesWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid);
        return localVarResp.getData();
    }

    /**
     * This API returns all origins with own preferred magnitude.
     * This API returns all the origins with own preferred magnitude
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return ApiResponse&lt;GetEventsGroup200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsGroup200Response> getMagnitudesWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        okhttp3.Call localVarCall = getMagnitudesValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, null);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all origins with own preferred magnitude. (asynchronously)
     * This API returns all the origins with own preferred magnitude
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMagnitudesAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback<GetEventsGroup200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getMagnitudesValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getMunicipiDistanceKmPopolazione
     * @param mindistance Specify minimum distance (kilometers). (required)
     * @param maxdistance Specify maximum distance (kilometers). (required)
     * @param minpopolazione Specify minimum popolazione. (required)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMunicipiDistanceKmPopolazioneCall(Double mindistance, Double maxdistance, Long minpopolazione, Double lat, Double lon, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/boundaries/v1/municipi-distance-km-popolazione";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (maxdistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdistance", maxdistance));
        }

        if (minpopolazione != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minpopolazione", minpopolazione));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getMunicipiDistanceKmPopolazioneValidateBeforeCall(Double mindistance, Double maxdistance, Long minpopolazione, Double lat, Double lon, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'mindistance' is set
        if (mindistance == null) {
            throw new ApiException("Missing the required parameter 'mindistance' when calling getMunicipiDistanceKmPopolazione(Async)");
        }

        // verify the required parameter 'maxdistance' is set
        if (maxdistance == null) {
            throw new ApiException("Missing the required parameter 'maxdistance' when calling getMunicipiDistanceKmPopolazione(Async)");
        }

        // verify the required parameter 'minpopolazione' is set
        if (minpopolazione == null) {
            throw new ApiException("Missing the required parameter 'minpopolazione' when calling getMunicipiDistanceKmPopolazione(Async)");
        }

        return getMunicipiDistanceKmPopolazioneCall(mindistance, maxdistance, minpopolazione, lat, lon, _callback);

    }

    /**
     * This API returns the municipi-distance-km-popolazione used at INGV.
     * This API returns the municipi-distance-km-popolazione.
     * @param mindistance Specify minimum distance (kilometers). (required)
     * @param maxdistance Specify maximum distance (kilometers). (required)
     * @param minpopolazione Specify minimum popolazione. (required)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @return GetMunicipiDistanceKmPopolazione200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetMunicipiDistanceKmPopolazione200Response getMunicipiDistanceKmPopolazione(Double mindistance, Double maxdistance, Long minpopolazione, Double lat, Double lon) throws ApiException {
        ApiResponse<GetMunicipiDistanceKmPopolazione200Response> localVarResp = getMunicipiDistanceKmPopolazioneWithHttpInfo(mindistance, maxdistance, minpopolazione, lat, lon);
        return localVarResp.getData();
    }

    /**
     * This API returns the municipi-distance-km-popolazione used at INGV.
     * This API returns the municipi-distance-km-popolazione.
     * @param mindistance Specify minimum distance (kilometers). (required)
     * @param maxdistance Specify maximum distance (kilometers). (required)
     * @param minpopolazione Specify minimum popolazione. (required)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @return ApiResponse&lt;GetMunicipiDistanceKmPopolazione200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetMunicipiDistanceKmPopolazione200Response> getMunicipiDistanceKmPopolazioneWithHttpInfo(Double mindistance, Double maxdistance, Long minpopolazione, Double lat, Double lon) throws ApiException {
        okhttp3.Call localVarCall = getMunicipiDistanceKmPopolazioneValidateBeforeCall(mindistance, maxdistance, minpopolazione, lat, lon, null);
        Type localVarReturnType = new TypeToken<GetMunicipiDistanceKmPopolazione200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the municipi-distance-km-popolazione used at INGV. (asynchronously)
     * This API returns the municipi-distance-km-popolazione.
     * @param mindistance Specify minimum distance (kilometers). (required)
     * @param maxdistance Specify maximum distance (kilometers). (required)
     * @param minpopolazione Specify minimum popolazione. (required)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMunicipiDistanceKmPopolazioneAsync(Double mindistance, Double maxdistance, Long minpopolazione, Double lat, Double lon, final ApiCallback<GetMunicipiDistanceKmPopolazione200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getMunicipiDistanceKmPopolazioneValidateBeforeCall(mindistance, maxdistance, minpopolazione, lat, lon, _callback);
        Type localVarReturnType = new TypeToken<GetMunicipiDistanceKmPopolazione200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getMunicipio
     * @param name Specify the Italian \&quot;municipio\&quot; name. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMunicipioCall(String name, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/boundaries/v1/municipio";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getMunicipioValidateBeforeCall(String name, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling getMunicipio(Async)");
        }

        return getMunicipioCall(name, _callback);

    }

    /**
     * This API returns the Italian \&quot;municipio\&quot; information by name.
     * This API returns the Italian \&quot;municipio\&quot; information, by name.
     * @param name Specify the Italian \&quot;municipio\&quot; name. (required)
     * @return GetMunicipio200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetMunicipio200Response getMunicipio(String name) throws ApiException {
        ApiResponse<GetMunicipio200Response> localVarResp = getMunicipioWithHttpInfo(name);
        return localVarResp.getData();
    }

    /**
     * This API returns the Italian \&quot;municipio\&quot; information by name.
     * This API returns the Italian \&quot;municipio\&quot; information, by name.
     * @param name Specify the Italian \&quot;municipio\&quot; name. (required)
     * @return ApiResponse&lt;GetMunicipio200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetMunicipio200Response> getMunicipioWithHttpInfo(String name) throws ApiException {
        okhttp3.Call localVarCall = getMunicipioValidateBeforeCall(name, null);
        Type localVarReturnType = new TypeToken<GetMunicipio200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the Italian \&quot;municipio\&quot; information by name. (asynchronously)
     * This API returns the Italian \&quot;municipio\&quot; information, by name.
     * @param name Specify the Italian \&quot;municipio\&quot; name. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getMunicipioAsync(String name, final ApiCallback<GetMunicipio200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getMunicipioValidateBeforeCall(name, _callback);
        Type localVarReturnType = new TypeToken<GetMunicipio200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getOriginFlag
     * @param originid Select by origin id. (optional)
     * @param name Flag name (optional)
     * @param value Flag value (optional)
     * @param note Flag note (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOriginFlagCall(Long originid, String name, Long value, String note, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/origin-flag";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (value != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("value", value));
        }

        if (note != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note", note));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOriginFlagValidateBeforeCall(Long originid, String name, Long value, String note, final ApiCallback _callback) throws ApiException {
        return getOriginFlagCall(originid, name, value, note, _callback);

    }

    /**
     * This API returns the all the flags assosiated to the originid.
     * This API returns the all the flags assosiated to the originid.
     * @param originid Select by origin id. (optional)
     * @param name Flag name (optional)
     * @param value Flag value (optional)
     * @param note Flag note (optional)
     * @return GetOriginFlag200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetOriginFlag200Response getOriginFlag(Long originid, String name, Long value, String note) throws ApiException {
        ApiResponse<GetOriginFlag200Response> localVarResp = getOriginFlagWithHttpInfo(originid, name, value, note);
        return localVarResp.getData();
    }

    /**
     * This API returns the all the flags assosiated to the originid.
     * This API returns the all the flags assosiated to the originid.
     * @param originid Select by origin id. (optional)
     * @param name Flag name (optional)
     * @param value Flag value (optional)
     * @param note Flag note (optional)
     * @return ApiResponse&lt;GetOriginFlag200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetOriginFlag200Response> getOriginFlagWithHttpInfo(Long originid, String name, Long value, String note) throws ApiException {
        okhttp3.Call localVarCall = getOriginFlagValidateBeforeCall(originid, name, value, note, null);
        Type localVarReturnType = new TypeToken<GetOriginFlag200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the all the flags assosiated to the originid. (asynchronously)
     * This API returns the all the flags assosiated to the originid.
     * @param originid Select by origin id. (optional)
     * @param name Flag name (optional)
     * @param value Flag value (optional)
     * @param note Flag note (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOriginFlagAsync(Long originid, String name, Long value, String note, final ApiCallback<GetOriginFlag200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOriginFlagValidateBeforeCall(originid, name, value, note, _callback);
        Type localVarReturnType = new TypeToken<GetOriginFlag200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getOrigins
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOriginsCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/v1/origins";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (starttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starttime", starttime));
        }

        if (endtime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endtime", endtime));
        }

        if (minlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlat", minlat));
        }

        if (maxlat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlat", maxlat));
        }

        if (minlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minlon", minlon));
        }

        if (maxlon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxlon", maxlon));
        }

        if (orpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orpolygon", orpolygon));
        }

        if (notinpolygon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notinpolygon", notinpolygon));
        }

        if (wherepolygonnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wherepolygonnamein", wherepolygonnamein));
        }

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        if (minradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradius", minradius));
        }

        if (maxradius != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradius", maxradius));
        }

        if (minradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minradiuskm", minradiuskm));
        }

        if (maxradiuskm != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxradiuskm", maxradiuskm));
        }

        if (minmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minmag", minmag));
        }

        if (maxmag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxmag", maxmag));
        }

        if (mindepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindepth", mindepth));
        }

        if (maxdepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxdepth", maxdepth));
        }

        if (minnphtot != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minnphtot", minnphtot));
        }

        if (mindistance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mindistance", mindistance));
        }

        if (wheretypeeventnamein != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamein", wheretypeeventnamein));
        }

        if (wheretypeeventnamenotin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheretypeeventnamenotin", wheretypeeventnamenotin));
        }

        if (whereoriginqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginqualityin", whereoriginqualityin));
        }

        if (wheremagnitudemagqualityin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudemagqualityin", wheremagnitudemagqualityin));
        }

        if (mintypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mintypeoriginvalue", mintypeoriginvalue));
        }

        if (maxtypeoriginvalue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxtypeoriginvalue", maxtypeoriginvalue));
        }

        if (origindirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("origindirectlinktoevent", origindirectlinktoevent));
        }

        if (magnitudedirectlinktoorigin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoorigin", magnitudedirectlinktoorigin));
        }

        if (magnitudedirectlinktoevent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudedirectlinktoevent", magnitudedirectlinktoevent));
        }

        if (wheretypeoriginvaluein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypeoriginvaluein", wheretypeoriginvaluein));
        }

        if (wheretypemagnitudenameregexp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheretypemagnitudenameregexp", wheretypemagnitudenameregexp));
        }

        if (whereeventlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereeventlocalspaceenvironmentin", whereeventlocalspaceenvironmentin));
        }

        if (whereoriginlocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "whereoriginlocalspaceenvironmentin", whereoriginlocalspaceenvironmentin));
        }

        if (wheremagnitudelocalspaceenvironmentin != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "wheremagnitudelocalspaceenvironmentin", wheremagnitudelocalspaceenvironmentin));
        }

        if (whereeventlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereeventlocalspacenamein", whereeventlocalspacenamein));
        }

        if (whereoriginlocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereoriginlocalspacenamein", whereoriginlocalspacenamein));
        }

        if (wheremagnitudelocalspacenamein != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("wheremagnitudelocalspacenamein", wheremagnitudelocalspacenamein));
        }

        if (eventupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventupdatedafter", eventupdatedafter));
        }

        if (originupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originupdatedafter", originupdatedafter));
        }

        if (magnitudeupdatedafter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeupdatedafter", magnitudeupdatedafter));
        }

        if (updatedafteroperator != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("updatedafteroperator", updatedafteroperator));
        }

        if (whereflagsin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("whereflagsin", whereflagsin));
        }

        if (orderby != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("orderby", orderby));
        }

        if (eventGroupId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("event_group_id", eventGroupId));
        }

        if (idLocalspace != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id_localspace", idLocalspace));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (eventid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("eventid", eventid));
        }

        if (originid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("originid", originid));
        }

        if (magnitudeid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("magnitudeid", magnitudeid));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOriginsValidateBeforeCall(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback _callback) throws ApiException {
        return getOriginsCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);

    }

    /**
     * This API returns all the preferred origins.
     * This API returns all the preferred origins
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return GetEventsGroup200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetEventsGroup200Response getOrigins(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        ApiResponse<GetEventsGroup200Response> localVarResp = getOriginsWithHttpInfo(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid);
        return localVarResp.getData();
    }

    /**
     * This API returns all the preferred origins.
     * This API returns all the preferred origins
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @return ApiResponse&lt;GetEventsGroup200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetEventsGroup200Response> getOriginsWithHttpInfo(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid) throws ApiException {
        okhttp3.Call localVarCall = getOriginsValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, null);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the preferred origins. (asynchronously)
     * This API returns all the preferred origins
     * @param starttime Select date start (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param endtime Select date end (i.e. 2016-06-22T16:52:06.260Z). (optional)
     * @param minlat Specify southern boundary for search in WGS84 (i.e. 39.12). (optional)
     * @param maxlat Specify northern boundary for search in WGS84 (i.e. 46.52). (optional)
     * @param minlon Specify western boundary for search in WGS84 (i.e. 10.12). (optional)
     * @param maxlon Specify eastern boundary for search (in WGS84) (i.e. 15.12). (optional)
     * @param orpolygon Specify a list of polygons to select data.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;orpolygon&#x3D;12,42,13,42,13,43,12,43,12,42|12.3,42.3,13.3,42.3,13.3,43.3,12.3,43.3,12.3,42.3&#x60;. (optional)
     * @param notinpolygon Specify a list of polygons to NOT select data within.   Each poligon is &#x60;|&#x60; separated values, with counterclockwise values like &#x60;&lt;lon&gt;,&lt;lat&gt;&#x60; and last couple must be like the first one.  * Example: &#x60;notinpolygon&#x3D;12.5,42,12.5,43,13,48,12.5,42|12.2,41.8,13.2,41.8,13.2,42.8,12.2,42.8,12.2,41.8&#x60; (optional)
     * @param wherepolygonnamein Specify a list of pre-set polygons.   Each poligon is &#x60;,&#x60; separated value.  * Example: &#x60;wherepolygonnamein&#x3D;area_confine_italia,area_vulcanica_italia&#x60; (optional)
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param minradius Specify minimum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 1.5). (optional)
     * @param maxradius Specify maximum distance from the geographic point defined by latitude and longitude in Degrees (i.e. 5). (optional)
     * @param minradiuskm Specify minimum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param maxradiuskm Specify maximum distance from the geographic point defined by latitude and longitude. Kilometers. (optional)
     * @param minmag Limit to events with a magnitude larger than or equal to the specified minimum (i.e. 1.5). (optional)
     * @param maxmag Limit to events with a magnitude smaller than or equal to the specified maximum (i.e. 7.3). (optional)
     * @param mindepth Specify minimum depth (kilometers), values increase positively with depth (i.e. 0). (optional)
     * @param maxdepth Specify maximum depth (kilometers), values increase positively with depth (i.e. 50). (optional)
     * @param minnphtot Specify minimum number of phases (P&amp;S) with weight &gt; 0.0. (optional)
     * @param mindistance Specify minimum distance from the closest station (kilometers). (optional)
     * @param wheretypeeventnamein Filter by \&quot;event.type_event\&quot; by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param wheretypeeventnamenotin Filter by \&quot;event.type_event\&quot; - not in - by comma separated value (i.e. earthquake,not reported,collapse,explosion). (optional)
     * @param whereoriginqualityin Filter by \&quot;origin.quality\&quot; by comma separated value (i.e. AA,AB,BC). (optional)
     * @param wheremagnitudemagqualityin Filter by \&quot;magnitude.mag_quality\&quot; by comma separated value (i.e. A,B,BC,DD). (optional)
     * @param mintypeoriginvalue Filter the output to type_origin.version_value (i.e. 0). (optional)
     * @param maxtypeoriginvalue Filter the output to type_origin.version_value (i.e. 1000). (optional)
     * @param origindirectlinktoevent Origin entity is directly linked to Event entity (&#x60;origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoorigin Magnitude entity is directly linked to Origin entity (&#x60;magnitude.fk_origin&#x3D;origin.id&#x60;) (optional, default to false)
     * @param magnitudedirectlinktoevent Magnitude entity is directly linked to Event entity &#x60;(magnitude.fk_origin&#x3D;origin.id AND origin.fk_event&#x3D;event.id&#x60;) (optional, default to false)
     * @param wheretypeoriginvaluein Filter by type_origin.version_value (i.e. 0,1,200). (optional)
     * @param wheretypemagnitudenameregexp Filter by type_magnitude.name using case-insensitive regexp (i.e. \&quot;^ml.\\*\&quot; or \&quot;^ml.*|^mwp$\&quot;). (optional)
     * @param whereeventlocalspaceenvironmentin Filter by \&quot;event.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param whereoriginlocalspaceenvironmentin Filter by \&quot;origin.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;wheremagnitudelocalspaceenvironmentin\&quot;. (optional)
     * @param wheremagnitudelocalspaceenvironmentin Filter by \&quot;magnitude.localspace.environment\&quot; by comma separated value (i.e. development,staging); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspaceenvironmentin\&quot; and \&quot;whereoriginlocalspaceenvironmentin\&quot;. (optional)
     * @param whereeventlocalspacenamein Filter by \&quot;event.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereoriginlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param whereoriginlocalspacenamein Filter by \&quot;origin.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;wheremagnitudelocalspacenamein\&quot;. (optional)
     * @param wheremagnitudelocalspacenamein Filter by \&quot;magnitude.localspace.name\&quot; by comma separated value (i.e. hew10_mole,hew20_mole); this parameter is in \&quot;OR\&quot; with \&quot;whereeventlocalspacenamein\&quot; and \&quot;whereoriginlocalspacenamein\&quot;. (optional)
     * @param eventupdatedafter Limit data to \&quot;event.modified\&quot; after; if \&quot;originupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param originupdatedafter Limit data to \&quot;origin.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;magnitudeupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param magnitudeupdatedafter Limit data to \&quot;magnitude.modified\&quot; after; if \&quot;eventupdatedafter\&quot; and/or \&quot;originupdatedafter\&quot; are set, the \&quot;updatedafteroperator\&quot; is used. (optional)
     * @param updatedafteroperator Set the \&quot;operator\&quot; to use when \&quot;eventupdatedafter\&quot;, \&quot;originupdatedafter\&quot; and \&quot;magnitudeupdatedafter\&quot; are set. (optional, default to or)
     * @param whereflagsin Filter flags by comma separated values (i.e. DPC,twitter,shakemap4); values are in \&quot;OR\&quot;. (optional)
     * @param orderby Select \&quot;order by\&quot;; multiple \&quot;order\&quot; contatenation available (i.e. event_id-desc,type_origin_version_value-asc) (optional)
     * @param eventGroupId Select events with same event_group_id. (optional)
     * @param idLocalspace Localspace Id. (optional)
     * @param limit Limit the results to the specified number of records. (optional)
     * @param page Pagination. (optional)
     * @param eventid Select by event id. (optional)
     * @param originid Select by origin id. (optional)
     * @param magnitudeid Select by magnitude id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getOriginsAsync(OffsetDateTime starttime, OffsetDateTime endtime, Double minlat, Double maxlat, Double minlon, Double maxlon, String orpolygon, String notinpolygon, List<String> wherepolygonnamein, Double lat, Double lon, Double minradius, Double maxradius, Double minradiuskm, Double maxradiuskm, Double minmag, Double maxmag, Double mindepth, Double maxdepth, Integer minnphtot, Double mindistance, List<String> wheretypeeventnamein, List<String> wheretypeeventnamenotin, List<String> whereoriginqualityin, List<String> wheremagnitudemagqualityin, Long mintypeoriginvalue, Long maxtypeoriginvalue, Boolean origindirectlinktoevent, Boolean magnitudedirectlinktoorigin, Boolean magnitudedirectlinktoevent, String wheretypeoriginvaluein, String wheretypemagnitudenameregexp, List<String> whereeventlocalspaceenvironmentin, List<String> whereoriginlocalspaceenvironmentin, List<String> wheremagnitudelocalspaceenvironmentin, String whereeventlocalspacenamein, String whereoriginlocalspacenamein, String wheremagnitudelocalspacenamein, OffsetDateTime eventupdatedafter, OffsetDateTime originupdatedafter, OffsetDateTime magnitudeupdatedafter, String updatedafteroperator, String whereflagsin, String orderby, Long eventGroupId, Long idLocalspace, Integer limit, Integer page, Long eventid, Long originid, Long magnitudeid, final ApiCallback<GetEventsGroup200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOriginsValidateBeforeCall(starttime, endtime, minlat, maxlat, minlon, maxlon, orpolygon, notinpolygon, wherepolygonnamein, lat, lon, minradius, maxradius, minradiuskm, maxradiuskm, minmag, maxmag, mindepth, maxdepth, minnphtot, mindistance, wheretypeeventnamein, wheretypeeventnamenotin, whereoriginqualityin, wheremagnitudemagqualityin, mintypeoriginvalue, maxtypeoriginvalue, origindirectlinktoevent, magnitudedirectlinktoorigin, magnitudedirectlinktoevent, wheretypeoriginvaluein, wheretypemagnitudenameregexp, whereeventlocalspaceenvironmentin, whereoriginlocalspaceenvironmentin, wheremagnitudelocalspaceenvironmentin, whereeventlocalspacenamein, whereoriginlocalspacenamein, wheremagnitudelocalspacenamein, eventupdatedafter, originupdatedafter, magnitudeupdatedafter, updatedafteroperator, whereflagsin, orderby, eventGroupId, idLocalspace, limit, page, eventid, originid, magnitudeid, _callback);
        Type localVarReturnType = new TypeToken<GetEventsGroup200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProvenance
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProvenanceCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/table/v1/provenance";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProvenanceValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getProvenanceCall(_callback);

    }

    /**
     * This API returns all the provenance(s).
     * This API returns all the provenance(s).
     * @return GetProvenance200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetProvenance200Response getProvenance() throws ApiException {
        ApiResponse<GetProvenance200Response> localVarResp = getProvenanceWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * This API returns all the provenance(s).
     * This API returns all the provenance(s).
     * @return ApiResponse&lt;GetProvenance200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetProvenance200Response> getProvenanceWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getProvenanceValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetProvenance200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the provenance(s). (asynchronously)
     * This API returns all the provenance(s).
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProvenanceAsync(final ApiCallback<GetProvenance200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProvenanceValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetProvenance200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRegionName
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRegionNameCall(Double lat, Double lon, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/boundaries/v1/region-name";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (lat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lat", lat));
        }

        if (lon != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lon", lon));
        }

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRegionNameValidateBeforeCall(Double lat, Double lon, final ApiCallback _callback) throws ApiException {
        return getRegionNameCall(lat, lon, _callback);

    }

    /**
     * This API returns the region name used at INGV.
     * This API returns the region name.
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @return GetRegionName200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionName200Response getRegionName(Double lat, Double lon) throws ApiException {
        ApiResponse<GetRegionName200Response> localVarResp = getRegionNameWithHttpInfo(lat, lon);
        return localVarResp.getData();
    }

    /**
     * This API returns the region name used at INGV.
     * This API returns the region name.
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @return ApiResponse&lt;GetRegionName200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetRegionName200Response> getRegionNameWithHttpInfo(Double lat, Double lon) throws ApiException {
        okhttp3.Call localVarCall = getRegionNameValidateBeforeCall(lat, lon, null);
        Type localVarReturnType = new TypeToken<GetRegionName200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns the region name used at INGV. (asynchronously)
     * This API returns the region name.
     * @param lat Specify the central latitude point for a radial search in WGS84 (i.e. 42). (optional)
     * @param lon Specify the central longitude point for a radial search in WGS84 (i.e. 12). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRegionNameAsync(Double lat, Double lon, final ApiCallback<GetRegionName200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRegionNameValidateBeforeCall(lat, lon, _callback);
        Type localVarReturnType = new TypeToken<GetRegionName200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getTypeEvent
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeEventCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/table/v1/type-event";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getTypeEventValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getTypeEventCall(_callback);

    }

    /**
     * This API returns all the type_event(s).
     * This API returns all the type_event(s).
     * @return GetTypeEvent200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetTypeEvent200Response getTypeEvent() throws ApiException {
        ApiResponse<GetTypeEvent200Response> localVarResp = getTypeEventWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * This API returns all the type_event(s).
     * This API returns all the type_event(s).
     * @return ApiResponse&lt;GetTypeEvent200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetTypeEvent200Response> getTypeEventWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getTypeEventValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetTypeEvent200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the type_event(s). (asynchronously)
     * This API returns all the type_event(s).
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeEventAsync(final ApiCallback<GetTypeEvent200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getTypeEventValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetTypeEvent200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getTypeMagnitude
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeMagnitudeCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/table/v1/type-magnitude";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getTypeMagnitudeValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getTypeMagnitudeCall(_callback);

    }

    /**
     * This API returns all the type_magnitude(s).
     * This API returns all the type_magnitude(s).
     * @return GetTypeMagnitude200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetTypeMagnitude200Response getTypeMagnitude() throws ApiException {
        ApiResponse<GetTypeMagnitude200Response> localVarResp = getTypeMagnitudeWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * This API returns all the type_magnitude(s).
     * This API returns all the type_magnitude(s).
     * @return ApiResponse&lt;GetTypeMagnitude200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetTypeMagnitude200Response> getTypeMagnitudeWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getTypeMagnitudeValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetTypeMagnitude200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the type_magnitude(s). (asynchronously)
     * This API returns all the type_magnitude(s).
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeMagnitudeAsync(final ApiCallback<GetTypeMagnitude200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getTypeMagnitudeValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetTypeMagnitude200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getTypeOrigin
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeOriginCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/quakedb/table/v1/type-origin";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/problem+json",
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getTypeOriginValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getTypeOriginCall(_callback);

    }

    /**
     * This API returns all the type_origin(s).
     * This API returns all the type_origin(s).
     * @return GetTypeOrigin200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public GetTypeOrigin200Response getTypeOrigin() throws ApiException {
        ApiResponse<GetTypeOrigin200Response> localVarResp = getTypeOriginWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * This API returns all the type_origin(s).
     * This API returns all the type_origin(s).
     * @return ApiResponse&lt;GetTypeOrigin200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetTypeOrigin200Response> getTypeOriginWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getTypeOriginValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<GetTypeOrigin200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This API returns all the type_origin(s). (asynchronously)
     * This API returns all the type_origin(s).
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too many requests </td><td>  * Retry-After -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 503 </td><td> Service Unavailable </td><td>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
        <tr><td> 200 </td><td> Operation successful </td><td>  * Cache-Control -  <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getTypeOriginAsync(final ApiCallback<GetTypeOrigin200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getTypeOriginValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<GetTypeOrigin200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
